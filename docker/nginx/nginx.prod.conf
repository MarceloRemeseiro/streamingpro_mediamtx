# =============================================================================
# NGINX - CONFIGURACIÓN DE PRODUCCIÓN PARA HETZNER
# StreamingPro - central.streamingpro.es
# =============================================================================
# Optimizado para servidor dedicado Hetzner i5-13500, 64GB RAM
# =============================================================================

# Configuración optimizada para servidor potente
worker_processes auto;  # Usará los 14 cores automáticamente
worker_rlimit_nofile 65535;
worker_connections_max 4096;

events {
    worker_connections 4096;  # Aumentado para servidor potente
    use epoll;
    multi_accept on;
}

http {
    # =============================================================================
    # CONFIGURACIÓN BÁSICA
    # =============================================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging optimizado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # =============================================================================
    # OPTIMIZACIONES DE RENDIMIENTO
    # =============================================================================
    
    # Configuración optimizada para servidor potente
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Buffers optimizados para streaming
    client_body_buffer_size 128k;
    client_max_body_size 100m;  # Para uploads de archivos grandes
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    
    # Timeouts optimizados
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Compresión (cuidado con streaming de video)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # =============================================================================
    # CONFIGURACIÓN SSL/TLS
    # =============================================================================
    
    # Configuración SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Optimizaciones SSL para servidor potente
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # =============================================================================
    # UPSTREAM DEFINITIONS
    # =============================================================================
    
    # Backend API
    upstream backend {
        server backend:3000;
        keepalive 32;  # Pool de conexiones para mejor rendimiento
    }
    
    # Frontend
    upstream frontend {
        server frontend:3000;
        keepalive 32;
    }
    
    # MediaMTX HLS
    upstream mediamtx_hls {
        server mediamtx:8888;
        keepalive 16;
    }
    
    # =============================================================================
    # REDIRECCIÓN HTTP → HTTPS
    # =============================================================================
    
    server {
        listen 80;
        server_name central.streamingpro.es;
        
        # Permitir Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redireccionar todo lo demás a HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # =============================================================================
    # SERVIDOR PRINCIPAL HTTPS
    # =============================================================================
    
    server {
        listen 443 ssl http2;
        server_name central.streamingpro.es;
        
        # Certificados SSL (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/central.streamingpro.es/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/central.streamingpro.es/privkey.pem;
        
        # =============================================================================
        # FRONTEND (React/Next.js)
        # =============================================================================
        
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts para páginas dinámicas
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # =============================================================================
        # BACKEND API
        # =============================================================================
        
        location /api/ {
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts para API
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # =============================================================================
        # WEBSOCKETS (Socket.IO)
        # =============================================================================
        
        location /socket.io/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts largos para WebSockets
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 86400s;  # 24h para conexiones persistentes
        }
        
        # =============================================================================
        # HLS STREAMING (MediaMTX)
        # =============================================================================
        
        location /hls/ {
            proxy_pass http://mediamtx_hls/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers específicos para HLS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            # Caching optimizado para HLS
            location ~* \.(m3u8)$ {
                expires -1;
                add_header 'Cache-Control' 'no-cache, no-store, must-revalidate';
            }
            
            location ~* \.(ts)$ {
                expires 1h;
                add_header 'Cache-Control' 'public, max-age=3600';
            }
            
            # Timeouts para streaming
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
        }
        
        # =============================================================================
        # ARCHIVOS ESTÁTICOS OPTIMIZADOS
        # =============================================================================
        
        # Assets del frontend con caching largo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # =============================================================================
        # SEGURIDAD Y MONITOREO
        # =============================================================================
        
        # Bloquear accesos sospechosos
        location ~ /\. {
            deny all;
        }
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Información del servidor (solo para debugging - remover en producción)
        location /nginx-info {
            return 200 "StreamingPro Nginx - central.streamingpro.es - $(date)\n";
            add_header Content-Type text/plain;
        }
    }
    
    # =============================================================================
    # CONFIGURACIÓN PARA STREAMING DIRECTO (SIN PROXY)
    # =============================================================================
    # Los protocolos SRT/RTMP/WebRTC van directamente a MediaMTX
    # No necesitan proxy porque usan puertos diferentes
    
}

# =============================================================================
# CONFIGURACIÓN TCP/UDP STREAM (para proxying protocolos streaming si fuera necesario)
# =============================================================================
# Actualmente no necesario porque MediaMTX maneja directamente los protocolos 