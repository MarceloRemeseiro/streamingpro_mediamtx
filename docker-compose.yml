services:
  postgres:
    image: postgres:15
    container_name: streamingpro_postgres_db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user_streaming
      POSTGRES_PASSWORD: password_streaming
      POSTGRES_DB: streamingpro_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_streaming -d streamingpro_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-test:
    image: postgres:15
    container_name: streamingpro_postgres_test_db
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: user_streaming
      POSTGRES_PASSWORD: password_streaming
      POSTGRES_DB: streamingpro_test_db
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_streaming -d streamingpro_test_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mediamtx:
    build:
      context: .
      dockerfile: docker/mediamtx/Dockerfile
    container_name: streamingpro_mediamtx
    restart: always
    ports:
      # RTSP
      - '8554:8554'
      # RTMP
      - '1935:1935'
      # WebRTC
      - '8888:8888'
      - '8889:8889'
      # SRT
      - '8890:8890/udp'
      # API MediaMTX
      - '9997:9997'
      # HLS
      - '8080:8080'
    volumes:
      # Directorio para archivos HLS
      - mediamtx_hls:/tmp/hls
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9997/v3/paths/list"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  mediamtx_hls:
    driver: local 